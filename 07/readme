Выполнить следующие задания и подготовить развёртывание результата выполнения с использованием Vagrant и Vagrant shell provisioner (или Ansible, на Ваше усмотрение):

1. Создать сервис и unit-файлы для этого сервиса:
- сервис: bash, python или другой скрипт, который мониторит log-файл на наличие ключевого слова;
- ключевое слово и путь к log-файлу должны браться из /etc/sysconfig/ (.service);
- сервис должен активироваться раз в 30 секунд (.timer).

2. Дополнить unit-файл сервиса httpd возможностью запустить несколько экземпляров сервиса с разными конфигурационными файлами.

3. Создать unit-файл(ы) для сервиса:
- сервис: Kafka, Jira или любой другой, у которого код успешного завершения не равен 0 (к примеру, приложение Java или скрипт с exit 143);
- ограничить сервис по использованию памяти;
- ограничить сервис ещё по трём ресурсам, которые не были рассмотрены на лекции;
- реализовать один из вариантов restart и объяснить почему выбран именно этот вариант.

============[выполнение]===============

1. Запустить стенд
vagrant up

2. Скрипт, который мониторит log файл на наличие ключевого слова:
sudo tail -f /var/log/messages
Вывод в /result/watchlog

3. Несколько httpd
sudo ss -tnulp | grep httpd
Вывод в /result/httpd

3. Jira
Для корректного завершения в unit файл добавлено:
SuccessExitStatus=143

Сервис ограничен следующими параметрами:
CPUQuota=50%
LimitNPROC=9000
LimitNOFILE=20000
LimitNICE=15
MemoryLimit=900M

Для службы настроена опция Restart=on-failure и таймаут перезапуска 60 сек. on-failure рекомендуется для служб, которые должны работать постоянно.
Проверяем: узнаем pid - ps aux | grep jira
убиваем процесс kill -9 PID
Если проверить через 60 секунд, то служба будет опять запущена.
sudo systemctl status jira
